What happens when you initialize a repository? Why do you need to do it?
- .git folder will be created where all the (old and new) information will be stored

How is the staging area different from the working directory and the repository? What value do you think it offers?
- the working derectory can contain files that have nothing to do with the staging area or commit. Its just the location of storage. Staging allows to kind of test the upcoming commit!?

How can you use the staging area to make sure you have one commit per logical change?
- compare staging area with repository and see the changes

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
- Branches help if one would want to add special features that are experimental and maybe even don't make it into the final code.
- also giid if you develop a new features
- if ou correct a bug (thats what mike wales said....sounds weird to me)
- master branch always works, other branches can be used for testing new functionality
- branches leep things organizedwhen working with others


How do the diagrams help you visualize the branch structure?
- structure can become quite complex the more branches exist. Therefore diagrams can help to understand inheritance and reachability

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?